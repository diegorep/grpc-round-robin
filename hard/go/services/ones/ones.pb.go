// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ones.proto

package ones

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// This is the One message. It's nothing special, just an object encapsulating a
// float (which, confusingly, does not need to be '1')
type One struct {
	// Float value contained within the one
	Value                float32  `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *One) Reset()         { *m = One{} }
func (m *One) String() string { return proto.CompactTextString(m) }
func (*One) ProtoMessage()    {}
func (*One) Descriptor() ([]byte, []int) {
	return fileDescriptor_ones_e453d8ab1589c5ed, []int{0}
}
func (m *One) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_One.Unmarshal(m, b)
}
func (m *One) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_One.Marshal(b, m, deterministic)
}
func (dst *One) XXX_Merge(src proto.Message) {
	xxx_messageInfo_One.Merge(dst, src)
}
func (m *One) XXX_Size() int {
	return xxx_messageInfo_One.Size(m)
}
func (m *One) XXX_DiscardUnknown() {
	xxx_messageInfo_One.DiscardUnknown(m)
}

var xxx_messageInfo_One proto.InternalMessageInfo

func (m *One) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// The folks at google like to encapsulate the base messages within a further
// layer of encapsulation that defines what a request/response would look like
// Note how this is structured as a <Verb><MessageNoun><TypeNoun> composition.
type GetOneRequest struct {
	// This message contains a message of type `One` within it
	Value                *One     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOneRequest) Reset()         { *m = GetOneRequest{} }
func (m *GetOneRequest) String() string { return proto.CompactTextString(m) }
func (*GetOneRequest) ProtoMessage()    {}
func (*GetOneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ones_e453d8ab1589c5ed, []int{1}
}
func (m *GetOneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOneRequest.Unmarshal(m, b)
}
func (m *GetOneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOneRequest.Marshal(b, m, deterministic)
}
func (dst *GetOneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOneRequest.Merge(dst, src)
}
func (m *GetOneRequest) XXX_Size() int {
	return xxx_messageInfo_GetOneRequest.Size(m)
}
func (m *GetOneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOneRequest proto.InternalMessageInfo

func (m *GetOneRequest) GetValue() *One {
	if m != nil {
		return m.Value
	}
	return nil
}

// The folks at google like to encapsulate the base messages within a further
// layer of encapsulation that defines what a request/response would look like
// Note how this is structured as a <Verb><MessageNoun><TypeNoun> composition.
type GetOneResponse struct {
	// This message contains a message of type `One` within it
	Value                *One     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOneResponse) Reset()         { *m = GetOneResponse{} }
func (m *GetOneResponse) String() string { return proto.CompactTextString(m) }
func (*GetOneResponse) ProtoMessage()    {}
func (*GetOneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ones_e453d8ab1589c5ed, []int{2}
}
func (m *GetOneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOneResponse.Unmarshal(m, b)
}
func (m *GetOneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOneResponse.Marshal(b, m, deterministic)
}
func (dst *GetOneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOneResponse.Merge(dst, src)
}
func (m *GetOneResponse) XXX_Size() int {
	return xxx_messageInfo_GetOneResponse.Size(m)
}
func (m *GetOneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOneResponse proto.InternalMessageInfo

func (m *GetOneResponse) GetValue() *One {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*One)(nil), "One")
	proto.RegisterType((*GetOneRequest)(nil), "GetOneRequest")
	proto.RegisterType((*GetOneResponse)(nil), "GetOneResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OnesClient is the client API for Ones service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnesClient interface {
	// This servers's sole RPC: get a One, return a One
	EchoOne(ctx context.Context, in *GetOneRequest, opts ...grpc.CallOption) (*GetOneResponse, error)
}

type onesClient struct {
	cc *grpc.ClientConn
}

func NewOnesClient(cc *grpc.ClientConn) OnesClient {
	return &onesClient{cc}
}

func (c *onesClient) EchoOne(ctx context.Context, in *GetOneRequest, opts ...grpc.CallOption) (*GetOneResponse, error) {
	out := new(GetOneResponse)
	err := c.cc.Invoke(ctx, "/Ones/EchoOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnesServer is the server API for Ones service.
type OnesServer interface {
	// This servers's sole RPC: get a One, return a One
	EchoOne(context.Context, *GetOneRequest) (*GetOneResponse, error)
}

func RegisterOnesServer(s *grpc.Server, srv OnesServer) {
	s.RegisterService(&_Ones_serviceDesc, srv)
}

func _Ones_EchoOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnesServer).EchoOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ones/EchoOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnesServer).EchoOne(ctx, req.(*GetOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ones_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ones",
	HandlerType: (*OnesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EchoOne",
			Handler:    _Ones_EchoOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ones.proto",
}

func init() { proto.RegisterFile("ones.proto", fileDescriptor_ones_e453d8ab1589c5ed) }

var fileDescriptor_ones_e453d8ab1589c5ed = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xcf, 0x4b, 0x2d,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe6, 0x62, 0xf6, 0xcf, 0x4b, 0x15, 0x12, 0xe1,
	0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0a, 0x82, 0x70, 0x94,
	0xb4, 0xb9, 0x78, 0xdd, 0x53, 0x4b, 0xfc, 0xf3, 0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x84, 0xa4, 0x90, 0x95, 0x71, 0x1b, 0xb1, 0xe8, 0x81, 0xe4, 0xa0, 0x8a, 0x75, 0xb8, 0xf8, 0x60,
	0x8a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xf1, 0xa9, 0x36, 0x32, 0xe1, 0x62, 0xf1, 0xcf, 0x4b,
	0x2d, 0x16, 0xd2, 0xe1, 0x62, 0x77, 0x4d, 0xce, 0xc8, 0x07, 0xb9, 0x81, 0x4f, 0x0f, 0xc5, 0x32,
	0x29, 0x7e, 0x3d, 0x54, 0xf3, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x8e, 0x36, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x3f, 0xa6, 0xc4, 0xec, 0xc2, 0x00, 0x00, 0x00,
}
