# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from messages import ones_pb2 as ones__pb2


class OnesStub(object):
  """Interface exposed by the Ones Service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EchoOne = channel.unary_unary(
        '/Ones/EchoOne',
        request_serializer=ones__pb2.GetOneRequest.SerializeToString,
        response_deserializer=ones__pb2.GetOneResponse.FromString,
        )


class OnesServicer(object):
  """Interface exposed by the Ones Service
  """

  def EchoOne(self, request, context):
    """This servers's sole RPC: get a One, return a One
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OnesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EchoOne': grpc.unary_unary_rpc_method_handler(
          servicer.EchoOne,
          request_deserializer=ones__pb2.GetOneRequest.FromString,
          response_serializer=ones__pb2.GetOneResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Ones', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
